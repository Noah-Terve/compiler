
** Conflict (shift/reduce) in state 131.
** Token involved: MODEQ
** This state is reached from program after reading:

decls NOT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 131, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

NOT expr 
    expr . MODEQ expr 

** In state 131, looking ahead at MODEQ, reducing production
** expr -> NOT expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
NOT expr . 

** Conflict (shift/reduce) in state 130.
** Token involved: MODEQ
** This state is reached from program after reading:

decls MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 130, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

MINUS expr 
      expr . MODEQ expr 

** In state 130, looking ahead at MODEQ, reducing production
** expr -> MINUS expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
MINUS expr . 

** Conflict (shift/reduce) in state 117.
** Token involved: MODEQ
** This state is reached from program after reading:

decls ID ASSIGN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 117, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

ID ASSIGN expr 
          expr . MODEQ expr 

** In state 117, looking ahead at MODEQ, reducing production
** expr -> ID ASSIGN expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
ID ASSIGN expr . 

** Conflict (shift/reduce) in state 115.
** Token involved: MODEQ
** This state is reached from program after reading:

decls ID DOT ID ASSIGN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 115, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

ID DOT ID ASSIGN expr 
                 expr . MODEQ expr 

** In state 115, looking ahead at MODEQ, reducing production
** expr -> ID DOT ID ASSIGN expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
ID DOT ID ASSIGN expr . 

** Conflict (shift/reduce) in state 94.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr INTERSECTEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 94, looking ahead at MODEQ, reducing production
** expr -> expr INTERSECTEQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr INTERSECTEQ expr . 

** In state 94, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr INTERSECTEQ expr 
                 expr . MODEQ expr 

** Conflict (shift/reduce) in state 92.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr MINUSEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 92, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr MINUSEQ expr 
             expr . MODEQ expr 

** In state 92, looking ahead at MODEQ, reducing production
** expr -> expr MINUSEQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr MINUSEQ expr . 

** Conflict (shift/reduce) in state 90.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr PLUSEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 90, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr PLUSEQ expr 
            expr . MODEQ expr 

** In state 90, looking ahead at MODEQ, reducing production
** expr -> expr PLUSEQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr PLUSEQ expr . 

** Conflict (shift/reduce) in state 88.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr DIVIDEEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 88, looking ahead at MODEQ, reducing production
** expr -> expr DIVIDEEQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr DIVIDEEQ expr . 

** In state 88, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr DIVIDEEQ expr 
              expr . MODEQ expr 

** Conflict (shift/reduce) in state 86.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr AND expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 86, looking ahead at MODEQ, reducing production
** expr -> expr AND expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr AND expr . 

** In state 86, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr AND expr 
         expr . MODEQ expr 

** Conflict (shift/reduce) in state 84.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr EQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 84, looking ahead at MODEQ, reducing production
** expr -> expr EQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr EQ expr . 

** In state 84, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr EQ expr 
        expr . MODEQ expr 

** Conflict (shift/reduce) in state 82.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr GEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 82, looking ahead at MODEQ, reducing production
** expr -> expr GEQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr GEQ expr . 

** In state 82, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr GEQ expr 
         expr . MODEQ expr 

** Conflict (shift/reduce) in state 80.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr GT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 80, looking ahead at MODEQ, reducing production
** expr -> expr GT expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr GT expr . 

** In state 80, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr GT expr 
        expr . MODEQ expr 

** Conflict (shift/reduce) in state 78.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr LEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 78, looking ahead at MODEQ, reducing production
** expr -> expr LEQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr LEQ expr . 

** In state 78, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr LEQ expr 
         expr . MODEQ expr 

** Conflict (shift/reduce) in state 76.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr INTERSECT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 76, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr INTERSECT expr 
               expr . MODEQ expr 

** In state 76, looking ahead at MODEQ, reducing production
** expr -> expr INTERSECT expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr INTERSECT expr . 

** Conflict (shift/reduce) in state 74.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr ISIN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 74, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr ISIN expr 
          expr . MODEQ expr 

** In state 74, looking ahead at MODEQ, reducing production
** expr -> expr ISIN expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr ISIN expr . 

** Conflict (shift/reduce) in state 72.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr LT expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 72, looking ahead at MODEQ, reducing production
** expr -> expr LT expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr LT expr . 

** In state 72, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr LT expr 
        expr . MODEQ expr 

** Conflict (shift/reduce) in state 70.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 70, looking ahead at MODEQ, reducing production
** expr -> expr MINUS expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr MINUS expr . 

** In state 70, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr MINUS expr 
           expr . MODEQ expr 

** Conflict (shift/reduce) in state 68.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr NEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 68, looking ahead at MODEQ, reducing production
** expr -> expr NEQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr NEQ expr . 

** In state 68, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr NEQ expr 
         expr . MODEQ expr 

** Conflict (shift/reduce) in state 66.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr OR expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 66, looking ahead at MODEQ, reducing production
** expr -> expr OR expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr OR expr . 

** In state 66, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr OR expr 
        expr . MODEQ expr 

** Conflict (shift/reduce) in state 64.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr DIVIDE expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 64, looking ahead at MODEQ, reducing production
** expr -> expr DIVIDE expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr DIVIDE expr . 

** In state 64, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr DIVIDE expr 
            expr . MODEQ expr 

** Conflict (shift/reduce) in state 62.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr MOD expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 62, looking ahead at MODEQ, reducing production
** expr -> expr MOD expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr MOD expr . 

** In state 62, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr MOD expr 
         expr . MODEQ expr 

** Conflict (shift/reduce) in state 60.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr PLUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 60, looking ahead at MODEQ, reducing production
** expr -> expr PLUS expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr PLUS expr . 

** In state 60, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr PLUS expr 
          expr . MODEQ expr 

** Conflict (shift/reduce) in state 58.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr TIMESEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 58, looking ahead at MODEQ, reducing production
** expr -> expr TIMESEQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr TIMESEQ expr . 

** In state 58, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr TIMESEQ expr 
             expr . MODEQ expr 

** Conflict (shift/reduce) in state 56.
** Tokens involved: UNIONEQ UNION TIMESEQ TIMES PLUSEQ PLUS OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECTEQ INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE AND
** The following explanations concentrate on token UNIONEQ.
** This state is reached from program after reading:

decls expr MODEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 56, looking ahead at UNIONEQ, shifting is permitted
** because of the following sub-derivation:

expr MODEQ expr 
           expr . UNIONEQ expr 

** In state 56, looking ahead at UNIONEQ, reducing production
** expr -> expr MODEQ expr
** is permitted because of the following sub-derivation:

expr UNIONEQ expr // lookahead token appears
expr MODEQ expr . 

** Conflict (shift/reduce) in state 54.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr TIMES expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 54, looking ahead at MODEQ, reducing production
** expr -> expr TIMES expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr TIMES expr . 

** In state 54, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr TIMES expr 
           expr . MODEQ expr 

** Conflict (shift/reduce) in state 52.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr UNION expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 52, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr UNION expr 
           expr . MODEQ expr 

** In state 52, looking ahead at MODEQ, reducing production
** expr -> expr UNION expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr UNION expr . 

** Conflict (shift/reduce) in state 50.
** Token involved: MODEQ
** This state is reached from program after reading:

decls expr UNIONEQ expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 50, looking ahead at MODEQ, reducing production
** expr -> expr UNIONEQ expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
expr UNIONEQ expr . 

** In state 50, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

expr UNIONEQ expr 
             expr . MODEQ expr 

** Conflict (shift/reduce) in state 48.
** Token involved: MODEQ
** This state is reached from program after reading:

decls typ ID ASSIGN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
decls EOF 
decls stmt 
      expr SEMI 
      (?)

** In state 48, looking ahead at MODEQ, shifting is permitted
** because of the following sub-derivation:

typ ID ASSIGN expr 
              expr . MODEQ expr 

** In state 48, looking ahead at MODEQ, reducing production
** expr -> typ ID ASSIGN expr
** is permitted because of the following sub-derivation:

expr MODEQ expr // lookahead token appears
typ ID ASSIGN expr . 
