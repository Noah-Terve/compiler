State 0:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On program shift to state 1
-- On decls shift to state 2
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT
--   reduce production decls ->

State 1:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept program

State 2:
## Known stack suffix:
## decls
## LR(1) items:
decls -> decls . stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
decls -> decls . fdecl [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
decls -> decls . sdecl [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
program -> decls . EOF [ # ]
## Transitions:
-- On WHILE shift to state 3
-- On TEMPLATE shift to state 172
-- On STRUCT shift to state 205
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On EOF shift to state 211
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 212
-- On templated_expr shift to state 43
-- On stmt shift to state 220
-- On set_expr shift to state 44
-- On sdecl shift to state 221
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On fdecl shift to state 222
-- On expr shift to state 156
## Reductions:

State 3:
## Known stack suffix:
## WHILE
## LR(1) items:
stmt -> WHILE . LPAREN expr RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LPAREN shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## WHILE LPAREN
## LR(1) items:
stmt -> WHILE LPAREN . expr RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 132
## Reductions:

State 5:
## Known stack suffix:
## STRING
## LR(1) items:
typ -> STRING . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production typ -> STRING

State 6:
## Known stack suffix:
## SLIT
## LR(1) items:
expr -> SLIT . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> SLIT

State 7:
## Known stack suffix:
## SET
## LR(1) items:
group_typ -> SET . LARROW INT RARROW [ RARROW ID COMMA ]
group_typ -> SET . LARROW BOOL RARROW [ RARROW ID COMMA ]
group_typ -> SET . LARROW ID RARROW [ RARROW ID COMMA ]
group_typ -> SET . LARROW group_typ RARROW [ RARROW ID COMMA ]
## Transitions:
-- On LARROW shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## SET LARROW
## LR(1) items:
group_typ -> SET LARROW . INT RARROW [ RARROW ID COMMA ]
group_typ -> SET LARROW . BOOL RARROW [ RARROW ID COMMA ]
group_typ -> SET LARROW . ID RARROW [ RARROW ID COMMA ]
group_typ -> SET LARROW . group_typ RARROW [ RARROW ID COMMA ]
## Transitions:
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 19
-- On ID shift to state 21
-- On BOOL shift to state 23
-- On group_typ shift to state 25
## Reductions:

State 9:
## Known stack suffix:
## LIST
## LR(1) items:
group_typ -> LIST . LARROW INT RARROW [ RARROW ID COMMA ]
group_typ -> LIST . LARROW BOOL RARROW [ RARROW ID COMMA ]
group_typ -> LIST . LARROW ID RARROW [ RARROW ID COMMA ]
group_typ -> LIST . LARROW group_typ RARROW [ RARROW ID COMMA ]
## Transitions:
-- On LARROW shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## LIST LARROW
## LR(1) items:
group_typ -> LIST LARROW . INT RARROW [ RARROW ID COMMA ]
group_typ -> LIST LARROW . BOOL RARROW [ RARROW ID COMMA ]
group_typ -> LIST LARROW . ID RARROW [ RARROW ID COMMA ]
group_typ -> LIST LARROW . group_typ RARROW [ RARROW ID COMMA ]
## Transitions:
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 11
-- On ID shift to state 13
-- On BOOL shift to state 15
-- On group_typ shift to state 17
## Reductions:

State 11:
## Known stack suffix:
## LIST LARROW INT
## LR(1) items:
group_typ -> LIST LARROW INT . RARROW [ RARROW ID COMMA ]
## Transitions:
-- On RARROW shift to state 12
## Reductions:

State 12:
## Known stack suffix:
## LIST LARROW INT RARROW
## LR(1) items:
group_typ -> LIST LARROW INT RARROW . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production group_typ -> LIST LARROW INT RARROW

State 13:
## Known stack suffix:
## LIST LARROW ID
## LR(1) items:
group_typ -> LIST LARROW ID . RARROW [ RARROW ID COMMA ]
## Transitions:
-- On RARROW shift to state 14
## Reductions:

State 14:
## Known stack suffix:
## LIST LARROW ID RARROW
## LR(1) items:
group_typ -> LIST LARROW ID RARROW . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production group_typ -> LIST LARROW ID RARROW

State 15:
## Known stack suffix:
## LIST LARROW BOOL
## LR(1) items:
group_typ -> LIST LARROW BOOL . RARROW [ RARROW ID COMMA ]
## Transitions:
-- On RARROW shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## LIST LARROW BOOL RARROW
## LR(1) items:
group_typ -> LIST LARROW BOOL RARROW . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production group_typ -> LIST LARROW BOOL RARROW

State 17:
## Known stack suffix:
## LIST LARROW group_typ
## LR(1) items:
group_typ -> LIST LARROW group_typ . RARROW [ RARROW ID COMMA ]
## Transitions:
-- On RARROW shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## LIST LARROW group_typ RARROW
## LR(1) items:
group_typ -> LIST LARROW group_typ RARROW . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production group_typ -> LIST LARROW group_typ RARROW

State 19:
## Known stack suffix:
## SET LARROW INT
## LR(1) items:
group_typ -> SET LARROW INT . RARROW [ RARROW ID COMMA ]
## Transitions:
-- On RARROW shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## SET LARROW INT RARROW
## LR(1) items:
group_typ -> SET LARROW INT RARROW . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production group_typ -> SET LARROW INT RARROW

State 21:
## Known stack suffix:
## SET LARROW ID
## LR(1) items:
group_typ -> SET LARROW ID . RARROW [ RARROW ID COMMA ]
## Transitions:
-- On RARROW shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## SET LARROW ID RARROW
## LR(1) items:
group_typ -> SET LARROW ID RARROW . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production group_typ -> SET LARROW ID RARROW

State 23:
## Known stack suffix:
## SET LARROW BOOL
## LR(1) items:
group_typ -> SET LARROW BOOL . RARROW [ RARROW ID COMMA ]
## Transitions:
-- On RARROW shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## SET LARROW BOOL RARROW
## LR(1) items:
group_typ -> SET LARROW BOOL RARROW . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production group_typ -> SET LARROW BOOL RARROW

State 25:
## Known stack suffix:
## SET LARROW group_typ
## LR(1) items:
group_typ -> SET LARROW group_typ . RARROW [ RARROW ID COMMA ]
## Transitions:
-- On RARROW shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## SET LARROW group_typ RARROW
## LR(1) items:
group_typ -> SET LARROW group_typ RARROW . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production group_typ -> SET LARROW group_typ RARROW

State 27:
## Known stack suffix:
## NOT
## LR(1) items:
expr -> NOT . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 131
## Reductions:

State 28:
## Known stack suffix:
## MINUS
## LR(1) items:
expr -> MINUS . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 130
## Reductions:

State 29:
## Known stack suffix:
## LPAREN
## LR(1) items:
paren_expr -> LPAREN . expr RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 128
## Reductions:

State 30:
## Known stack suffix:
## LITERAL
## LR(1) items:
expr -> LITERAL . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> LITERAL

State 31:
## Known stack suffix:
## LBRACK
## LR(1) items:
list_expr -> LBRACK . list_list RBRACK [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_list shift to state 123
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 127
## Reductions:

State 32:
## Known stack suffix:
## LBRACE
## LR(1) items:
set_expr -> LBRACE . set_list RBRACE [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_list shift to state 118
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 122
## Reductions:

State 33:
## Known stack suffix:
## INT
## LR(1) items:
typ -> INT . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production typ -> INT

State 34:
## Known stack suffix:
## ID
## LR(1) items:
expr -> ID . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> ID . DOT ID ASSIGN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> ID . ASSIGN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> ID . LPAREN args_opt RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
templated_expr -> ID . LARROW typ_list RARROW ID [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
templated_expr -> ID . LARROW typ_list RARROW LPAREN args_opt RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
typ -> ID . [ ID ]
## Transitions:
-- On LPAREN shift to state 35
-- On LARROW shift to state 101
-- On DOT shift to state 112
-- On ASSIGN shift to state 116
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> ID
-- On ID
--   reduce production typ -> ID

State 35:
## Known stack suffix:
## ID LPAREN
## LR(1) items:
expr -> ID LPAREN . args_opt RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 95
-- On args_opt shift to state 96
-- On args_list shift to state 98
## Reductions:
-- On RPAREN
--   reduce production args_opt ->

State 36:
## Known stack suffix:
## FLOAT
## LR(1) items:
typ -> FLOAT . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production typ -> FLOAT

State 37:
## Known stack suffix:
## FLIT
## LR(1) items:
expr -> FLIT . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> FLIT

State 38:
## Known stack suffix:
## BOOL
## LR(1) items:
typ -> BOOL . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production typ -> BOOL

State 39:
## Known stack suffix:
## BLIT
## LR(1) items:
expr -> BLIT . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> BLIT

State 40:
## Known stack suffix:
## typ
## LR(1) items:
expr -> typ . ID ASSIGN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> typ . ID [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On ID shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## typ ID
## LR(1) items:
expr -> typ ID . ASSIGN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> typ ID . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On ASSIGN shift to state 42
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> typ ID

State 42:
## Known stack suffix:
## typ ID ASSIGN
## LR(1) items:
expr -> typ ID ASSIGN . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 48
## Reductions:

State 43:
## Known stack suffix:
## templated_expr
## LR(1) items:
expr -> templated_expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> templated_expr

State 44:
## Known stack suffix:
## set_expr
## LR(1) items:
expr -> set_expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> set_expr

State 45:
## Known stack suffix:
## paren_expr
## LR(1) items:
expr -> paren_expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> paren_expr

State 46:
## Known stack suffix:
## list_expr
## LR(1) items:
expr -> list_expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> list_expr

State 47:
## Known stack suffix:
## group_typ
## LR(1) items:
typ -> group_typ . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production typ -> group_typ

State 48:
## Known stack suffix:
## typ ID ASSIGN expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> typ ID ASSIGN expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ MODEQ IN COMMA
--   reduce production expr -> typ ID ASSIGN expr
** Conflict on OREQ MODEQ

State 49:
## Known stack suffix:
## expr UNION
## LR(1) items:
expr -> expr UNION . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 50
## Reductions:

State 50:
## Known stack suffix:
## expr UNION expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr UNION expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On INTERSECT shift to state 83
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On UNION SEMI RPAREN RBRACK RBRACE OREQ OR NEQ MODEQ LT LEQ ISIN IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr UNION expr
** Conflict on OREQ MODEQ

State 51:
## Known stack suffix:
## expr TIMESEQ
## LR(1) items:
expr -> expr TIMESEQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 52
## Reductions:

State 52:
## Known stack suffix:
## expr TIMESEQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr TIMESEQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> expr TIMESEQ expr
** Conflict on OREQ MODEQ

State 53:
## Known stack suffix:
## expr OREQ
## LR(1) items:
expr -> expr OREQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## expr OREQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr OREQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> expr OREQ expr
** Conflict on UNION TIMESEQ TIMES PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND

State 55:
## Known stack suffix:
## expr TIMES
## LR(1) items:
expr -> expr TIMES . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## expr TIMES expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr TIMES expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> expr TIMES expr
** Conflict on OREQ MODEQ

State 57:
## Known stack suffix:
## expr MODEQ
## LR(1) items:
expr -> expr MODEQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## expr MODEQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr MODEQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> expr MODEQ expr
** Conflict on UNION TIMESEQ TIMES PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND

State 59:
## Known stack suffix:
## expr PLUSEQ
## LR(1) items:
expr -> expr PLUSEQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 60
## Reductions:

State 60:
## Known stack suffix:
## expr PLUSEQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr PLUSEQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On UNION SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr PLUSEQ expr
** Conflict on OREQ MODEQ

State 61:
## Known stack suffix:
## expr MOD
## LR(1) items:
expr -> expr MOD . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 62
## Reductions:

State 62:
## Known stack suffix:
## expr MOD expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr MOD expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> expr MOD expr
** Conflict on OREQ MODEQ

State 63:
## Known stack suffix:
## expr DIVIDEEQ
## LR(1) items:
expr -> expr DIVIDEEQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## expr DIVIDEEQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr DIVIDEEQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> expr DIVIDEEQ expr
** Conflict on OREQ MODEQ

State 65:
## Known stack suffix:
## expr DIVIDE
## LR(1) items:
expr -> expr DIVIDE . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 66
## Reductions:

State 66:
## Known stack suffix:
## expr DIVIDE expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr DIVIDE expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> expr DIVIDE expr
** Conflict on OREQ MODEQ

State 67:
## Known stack suffix:
## expr ANDEQ
## LR(1) items:
expr -> expr ANDEQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 68
## Reductions:

State 68:
## Known stack suffix:
## expr ANDEQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr ANDEQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> expr ANDEQ expr
** Conflict on OREQ MODEQ

State 69:
## Known stack suffix:
## expr PLUS
## LR(1) items:
expr -> expr PLUS . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## expr PLUS expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr PLUS expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On UNION SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr PLUS expr
** Conflict on OREQ MODEQ

State 71:
## Known stack suffix:
## expr OR
## LR(1) items:
expr -> expr OR . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 72
## Reductions:

State 72:
## Known stack suffix:
## expr OR expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr OR expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ OR MODEQ IN COMMA
--   reduce production expr -> expr OR expr
** Conflict on OREQ MODEQ

State 73:
## Known stack suffix:
## expr NEQ
## LR(1) items:
expr -> expr NEQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## expr NEQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr NEQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ OR NEQ MODEQ IN EQ COMMA AND
--   reduce production expr -> expr NEQ expr
** Conflict on OREQ MODEQ

State 75:
## Known stack suffix:
## expr MINUSEQ
## LR(1) items:
expr -> expr MINUSEQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 76
## Reductions:

State 76:
## Known stack suffix:
## expr MINUSEQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr MINUSEQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On UNION SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr MINUSEQ expr
** Conflict on OREQ MODEQ

State 77:
## Known stack suffix:
## expr MINUS
## LR(1) items:
expr -> expr MINUS . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 78
## Reductions:

State 78:
## Known stack suffix:
## expr MINUS expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr MINUS expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On UNION SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr MINUS expr
** Conflict on OREQ MODEQ

State 79:
## Known stack suffix:
## expr LT
## LR(1) items:
expr -> expr LT . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## expr LT expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr LT expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ OR NEQ MODEQ LT LEQ IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr LT expr
** Conflict on OREQ MODEQ

State 81:
## Known stack suffix:
## expr ISIN
## LR(1) items:
expr -> expr ISIN . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## expr ISIN expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr ISIN expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On INTERSECT shift to state 83
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ OR NEQ MODEQ LT LEQ ISIN IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr ISIN expr
** Conflict on OREQ MODEQ

State 83:
## Known stack suffix:
## expr INTERSECT
## LR(1) items:
expr -> expr INTERSECT . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## expr INTERSECT expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr INTERSECT expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On UNION SEMI RPAREN RBRACK RBRACE OREQ OR NEQ MODEQ LT LEQ ISIN INTERSECT IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr INTERSECT expr
** Conflict on OREQ MODEQ

State 85:
## Known stack suffix:
## expr LEQ
## LR(1) items:
expr -> expr LEQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## expr LEQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr LEQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ OR NEQ MODEQ LT LEQ IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr LEQ expr
** Conflict on OREQ MODEQ

State 87:
## Known stack suffix:
## expr GT
## LR(1) items:
expr -> expr GT . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## expr GT expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr GT expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ OR NEQ MODEQ LT LEQ IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr GT expr
** Conflict on OREQ MODEQ

State 89:
## Known stack suffix:
## expr GEQ
## LR(1) items:
expr -> expr GEQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## expr GEQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr GEQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ OR NEQ MODEQ LT LEQ IN GT GEQ EQ COMMA AND
--   reduce production expr -> expr GEQ expr
** Conflict on OREQ MODEQ

State 91:
## Known stack suffix:
## expr EQ
## LR(1) items:
expr -> expr EQ . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## expr EQ expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr EQ expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ OR NEQ MODEQ IN EQ COMMA AND
--   reduce production expr -> expr EQ expr
** Conflict on OREQ MODEQ

State 93:
## Known stack suffix:
## expr AND
## LR(1) items:
expr -> expr AND . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 94
## Reductions:

State 94:
## Known stack suffix:
## expr AND expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr AND expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ OR MODEQ IN COMMA AND
--   reduce production expr -> expr AND expr
** Conflict on OREQ MODEQ

State 95:
## Known stack suffix:
## expr
## LR(1) items:
args_list -> expr . [ RPAREN COMMA ]
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On RPAREN COMMA
--   reduce production args_list -> expr

State 96:
## Known stack suffix:
## ID LPAREN args_opt
## LR(1) items:
expr -> ID LPAREN args_opt . RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On RPAREN shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## ID LPAREN args_opt RPAREN
## LR(1) items:
expr -> ID LPAREN args_opt RPAREN . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> ID LPAREN args_opt RPAREN

State 98:
## Known stack suffix:
## args_list
## LR(1) items:
args_list -> args_list . COMMA expr [ RPAREN COMMA ]
args_opt -> args_list . [ RPAREN ]
## Transitions:
-- On COMMA shift to state 99
## Reductions:
-- On RPAREN
--   reduce production args_opt -> args_list

State 99:
## Known stack suffix:
## args_list COMMA
## LR(1) items:
args_list -> args_list COMMA . expr [ RPAREN COMMA ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## args_list COMMA expr
## LR(1) items:
args_list -> args_list COMMA expr . [ RPAREN COMMA ]
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On RPAREN COMMA
--   reduce production args_list -> args_list COMMA expr

State 101:
## Known stack suffix:
## ID LARROW
## LR(1) items:
templated_expr -> ID LARROW . typ_list RARROW ID [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
templated_expr -> ID LARROW . typ_list RARROW LPAREN args_opt RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ_list shift to state 103
-- On typ shift to state 111
-- On group_typ shift to state 47
## Reductions:

State 102:
## Known stack suffix:
## ID
## LR(1) items:
typ -> ID . [ RARROW ID COMMA ]
## Transitions:
## Reductions:
-- On RARROW ID COMMA
--   reduce production typ -> ID

State 103:
## Known stack suffix:
## ID LARROW typ_list
## LR(1) items:
templated_expr -> ID LARROW typ_list . RARROW ID [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
templated_expr -> ID LARROW typ_list . RARROW LPAREN args_opt RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
typ_list -> typ_list . COMMA typ [ RARROW COMMA ]
## Transitions:
-- On RARROW shift to state 104
-- On COMMA shift to state 109
## Reductions:

State 104:
## Known stack suffix:
## ID LARROW typ_list RARROW
## LR(1) items:
templated_expr -> ID LARROW typ_list RARROW . ID [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
templated_expr -> ID LARROW typ_list RARROW . LPAREN args_opt RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On LPAREN shift to state 105
-- On ID shift to state 108
## Reductions:

State 105:
## Known stack suffix:
## ID LARROW typ_list RARROW LPAREN
## LR(1) items:
templated_expr -> ID LARROW typ_list RARROW LPAREN . args_opt RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 95
-- On args_opt shift to state 106
-- On args_list shift to state 98
## Reductions:
-- On RPAREN
--   reduce production args_opt ->

State 106:
## Known stack suffix:
## ID LARROW typ_list RARROW LPAREN args_opt
## LR(1) items:
templated_expr -> ID LARROW typ_list RARROW LPAREN args_opt . RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On RPAREN shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## ID LARROW typ_list RARROW LPAREN args_opt RPAREN
## LR(1) items:
templated_expr -> ID LARROW typ_list RARROW LPAREN args_opt RPAREN . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production templated_expr -> ID LARROW typ_list RARROW LPAREN args_opt RPAREN

State 108:
## Known stack suffix:
## ID LARROW typ_list RARROW ID
## LR(1) items:
templated_expr -> ID LARROW typ_list RARROW ID . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production templated_expr -> ID LARROW typ_list RARROW ID

State 109:
## Known stack suffix:
## typ_list COMMA
## LR(1) items:
typ_list -> typ_list COMMA . typ [ RARROW COMMA ]
## Transitions:
-- On STRING shift to state 5
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ shift to state 110
-- On group_typ shift to state 47
## Reductions:

State 110:
## Known stack suffix:
## typ_list COMMA typ
## LR(1) items:
typ_list -> typ_list COMMA typ . [ RARROW COMMA ]
## Transitions:
## Reductions:
-- On RARROW COMMA
--   reduce production typ_list -> typ_list COMMA typ

State 111:
## Known stack suffix:
## typ
## LR(1) items:
typ_list -> typ . [ RARROW COMMA ]
## Transitions:
## Reductions:
-- On RARROW COMMA
--   reduce production typ_list -> typ

State 112:
## Known stack suffix:
## ID DOT
## LR(1) items:
expr -> ID DOT . ID ASSIGN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On ID shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## ID DOT ID
## LR(1) items:
expr -> ID DOT ID . ASSIGN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On ASSIGN shift to state 114
## Reductions:

State 114:
## Known stack suffix:
## ID DOT ID ASSIGN
## LR(1) items:
expr -> ID DOT ID ASSIGN . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## ID DOT ID ASSIGN expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> ID DOT ID ASSIGN expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ MODEQ IN COMMA
--   reduce production expr -> ID DOT ID ASSIGN expr
** Conflict on OREQ MODEQ

State 116:
## Known stack suffix:
## ID ASSIGN
## LR(1) items:
expr -> ID ASSIGN . expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 117
## Reductions:

State 117:
## Known stack suffix:
## ID ASSIGN expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> ID ASSIGN expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On SEMI RPAREN RBRACK RBRACE OREQ MODEQ IN COMMA
--   reduce production expr -> ID ASSIGN expr
** Conflict on OREQ MODEQ

State 118:
## Known stack suffix:
## LBRACE set_list
## LR(1) items:
set_expr -> LBRACE set_list . RBRACE [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
set_list -> set_list . COMMA expr [ RBRACE COMMA ]
## Transitions:
-- On RBRACE shift to state 119
-- On COMMA shift to state 120
## Reductions:

State 119:
## Known stack suffix:
## LBRACE set_list RBRACE
## LR(1) items:
set_expr -> LBRACE set_list RBRACE . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production set_expr -> LBRACE set_list RBRACE

State 120:
## Known stack suffix:
## set_list COMMA
## LR(1) items:
set_list -> set_list COMMA . expr [ RBRACE COMMA ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## set_list COMMA expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
set_list -> set_list COMMA expr . [ RBRACE COMMA ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On RBRACE COMMA
--   reduce production set_list -> set_list COMMA expr

State 122:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
set_list -> expr . [ RBRACE COMMA ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On RBRACE COMMA
--   reduce production set_list -> expr

State 123:
## Known stack suffix:
## LBRACK list_list
## LR(1) items:
list_expr -> LBRACK list_list . RBRACK [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
list_list -> list_list . COMMA expr [ RBRACK COMMA ]
## Transitions:
-- On RBRACK shift to state 124
-- On COMMA shift to state 125
## Reductions:

State 124:
## Known stack suffix:
## LBRACK list_list RBRACK
## LR(1) items:
list_expr -> LBRACK list_list RBRACK . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production list_expr -> LBRACK list_list RBRACK

State 125:
## Known stack suffix:
## list_list COMMA
## LR(1) items:
list_list -> list_list COMMA . expr [ RBRACK COMMA ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 126
## Reductions:

State 126:
## Known stack suffix:
## list_list COMMA expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
list_list -> list_list COMMA expr . [ RBRACK COMMA ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On RBRACK COMMA
--   reduce production list_list -> list_list COMMA expr

State 127:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RBRACK PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
list_list -> expr . [ RBRACK COMMA ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On RBRACK COMMA
--   reduce production list_list -> expr

State 128:
## Known stack suffix:
## LPAREN expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
paren_expr -> LPAREN expr . RPAREN [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On RPAREN shift to state 129
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:

State 129:
## Known stack suffix:
## LPAREN expr RPAREN
## LR(1) items:
paren_expr -> LPAREN expr RPAREN . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production paren_expr -> LPAREN expr RPAREN

State 130:
## Known stack suffix:
## MINUS expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> MINUS expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> MINUS expr
** Conflict on OREQ MODEQ

State 131:
## Known stack suffix:
## NOT expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> NOT expr . [ UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
## Transitions:
-- On OREQ shift to state 53
-- On MODEQ shift to state 57
## Reductions:
-- On UNION TIMESEQ TIMES SEMI RPAREN RBRACK RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND
--   reduce production expr -> NOT expr
** Conflict on OREQ MODEQ

State 132:
## Known stack suffix:
## WHILE LPAREN expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
stmt -> WHILE LPAREN expr . RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On RPAREN shift to state 133
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:

State 133:
## Known stack suffix:
## WHILE LPAREN expr RPAREN
## LR(1) items:
stmt -> WHILE LPAREN expr RPAREN . stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt shift to state 171
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 134:
## Known stack suffix:
## RETURN
## LR(1) items:
stmt -> RETURN . expr_opt SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr_opt shift to state 135
-- On expr shift to state 137
## Reductions:
-- On SEMI
--   reduce production expr_opt ->

State 135:
## Known stack suffix:
## RETURN expr_opt
## LR(1) items:
stmt -> RETURN expr_opt . SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On SEMI shift to state 136
## Reductions:

State 136:
## Known stack suffix:
## RETURN expr_opt SEMI
## LR(1) items:
stmt -> RETURN expr_opt SEMI . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> RETURN expr_opt SEMI

State 137:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr_opt -> expr . [ SEMI RPAREN ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On SEMI RPAREN
--   reduce production expr_opt -> expr

State 138:
## Known stack suffix:
## LBRACE
## LR(1) items:
set_expr -> LBRACE . set_list RBRACE [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
stmt -> LBRACE . stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt_list shift to state 166
-- On stmt shift to state 169
-- On set_list shift to state 118
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 170
## Reductions:

State 139:
## Known stack suffix:
## IF
## LR(1) items:
stmt -> IF . LPAREN expr RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
stmt -> IF . LPAREN expr RPAREN stmt ELSE stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LPAREN shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## IF LPAREN
## LR(1) items:
stmt -> IF LPAREN . expr RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
stmt -> IF LPAREN . expr RPAREN stmt ELSE stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## IF LPAREN expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
stmt -> IF LPAREN expr . RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
stmt -> IF LPAREN expr . RPAREN stmt ELSE stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On RPAREN shift to state 142
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:

State 142:
## Known stack suffix:
## IF LPAREN expr RPAREN
## LR(1) items:
stmt -> IF LPAREN expr RPAREN . stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
stmt -> IF LPAREN expr RPAREN . stmt ELSE stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt shift to state 163
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 143:
## Known stack suffix:
## FOR
## LR(1) items:
stmt -> FOR . LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
stmt -> FOR . LPAREN expr IN expr RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LPAREN shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## FOR LPAREN
## LR(1) items:
stmt -> FOR LPAREN . expr_opt SEMI expr SEMI expr_opt RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
stmt -> FOR LPAREN . expr IN expr RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr_opt shift to state 145
-- On expr shift to state 158
## Reductions:
-- On SEMI
--   reduce production expr_opt ->

State 145:
## Known stack suffix:
## FOR LPAREN expr_opt
## LR(1) items:
stmt -> FOR LPAREN expr_opt . SEMI expr SEMI expr_opt RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On SEMI shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## FOR LPAREN expr_opt SEMI
## LR(1) items:
stmt -> FOR LPAREN expr_opt SEMI . expr SEMI expr_opt RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## FOR LPAREN expr_opt SEMI expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
stmt -> FOR LPAREN expr_opt SEMI expr . SEMI expr_opt RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On SEMI shift to state 148
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:

State 148:
## Known stack suffix:
## FOR LPAREN expr_opt SEMI expr SEMI
## LR(1) items:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI . expr_opt RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr_opt shift to state 149
-- On expr shift to state 137
## Reductions:
-- On RPAREN
--   reduce production expr_opt ->

State 149:
## Known stack suffix:
## FOR LPAREN expr_opt SEMI expr SEMI expr_opt
## LR(1) items:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt . RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On RPAREN shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN
## LR(1) items:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN . stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt shift to state 155
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 151:
## Known stack suffix:
## CONTINUE
## LR(1) items:
stmt -> CONTINUE . SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On SEMI shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## CONTINUE SEMI
## LR(1) items:
stmt -> CONTINUE SEMI . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> CONTINUE SEMI

State 153:
## Known stack suffix:
## BREAK
## LR(1) items:
stmt -> BREAK . SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On SEMI shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## BREAK SEMI
## LR(1) items:
stmt -> BREAK SEMI . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> BREAK SEMI

State 155:
## Known stack suffix:
## FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt
## LR(1) items:
stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> FOR LPAREN expr_opt SEMI expr SEMI expr_opt RPAREN stmt

State 156:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
stmt -> expr . SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On SEMI shift to state 157
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:

State 157:
## Known stack suffix:
## expr SEMI
## LR(1) items:
stmt -> expr SEMI . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> expr SEMI

State 158:
## Known stack suffix:
## FOR LPAREN expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT IN GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr_opt -> expr . [ SEMI ]
stmt -> FOR LPAREN expr . IN expr RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On IN shift to state 159
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On SEMI
--   reduce production expr_opt -> expr

State 159:
## Known stack suffix:
## FOR LPAREN expr IN
## LR(1) items:
stmt -> FOR LPAREN expr IN . expr RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 32
-- On INT shift to state 33
-- On ID shift to state 34
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## FOR LPAREN expr IN expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES RPAREN PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
stmt -> FOR LPAREN expr IN expr . RPAREN stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On RPAREN shift to state 161
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:

State 161:
## Known stack suffix:
## FOR LPAREN expr IN expr RPAREN
## LR(1) items:
stmt -> FOR LPAREN expr IN expr RPAREN . stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt shift to state 162
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 162:
## Known stack suffix:
## FOR LPAREN expr IN expr RPAREN stmt
## LR(1) items:
stmt -> FOR LPAREN expr IN expr RPAREN stmt . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> FOR LPAREN expr IN expr RPAREN stmt

State 163:
## Known stack suffix:
## IF LPAREN expr RPAREN stmt
## LR(1) items:
stmt -> IF LPAREN expr RPAREN stmt . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
stmt -> IF LPAREN expr RPAREN stmt . ELSE stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On ELSE shift to state 164
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> IF LPAREN expr RPAREN stmt

State 164:
## Known stack suffix:
## IF LPAREN expr RPAREN stmt ELSE
## LR(1) items:
stmt -> IF LPAREN expr RPAREN stmt ELSE . stmt [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt shift to state 165
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 165:
## Known stack suffix:
## IF LPAREN expr RPAREN stmt ELSE stmt
## LR(1) items:
stmt -> IF LPAREN expr RPAREN stmt ELSE stmt . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> IF LPAREN expr RPAREN stmt ELSE stmt

State 166:
## Known stack suffix:
## LBRACE stmt_list
## LR(1) items:
stmt -> LBRACE stmt_list . RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
stmt_list -> stmt_list . stmt [ WHILE STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On RBRACE shift to state 167
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt shift to state 168
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 167:
## Known stack suffix:
## LBRACE stmt_list RBRACE
## LR(1) items:
stmt -> LBRACE stmt_list RBRACE . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> LBRACE stmt_list RBRACE

State 168:
## Known stack suffix:
## stmt_list stmt
## LR(1) items:
stmt_list -> stmt_list stmt . [ WHILE STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT CONTINUE BREAK BOOL BLIT
--   reduce production stmt_list -> stmt_list stmt

State 169:
## Known stack suffix:
## stmt
## LR(1) items:
stmt_list -> stmt . [ WHILE STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT CONTINUE BREAK BOOL BLIT
--   reduce production stmt_list -> stmt

State 170:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . PLUS expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUS expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMES expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDE expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . EQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . NEQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LT expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . LEQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GT expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . GEQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . AND expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OR expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MOD expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . DIVIDEEQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . TIMESEQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ANDEQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . OREQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MODEQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . MINUSEQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . PLUSEQ expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . INTERSECT expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . UNION expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
expr -> expr . ISIN expr [ UNION TIMESEQ TIMES SEMI RBRACE PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE COMMA ANDEQ AND ]
set_list -> expr . [ RBRACE COMMA ]
stmt -> expr . SEMI [ WHILE STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On UNION shift to state 49
-- On TIMESEQ shift to state 51
-- On TIMES shift to state 55
-- On SEMI shift to state 157
-- On PLUSEQ shift to state 59
-- On PLUS shift to state 69
-- On OREQ shift to state 53
-- On OR shift to state 71
-- On NEQ shift to state 73
-- On MODEQ shift to state 57
-- On MOD shift to state 61
-- On MINUSEQ shift to state 75
-- On MINUS shift to state 77
-- On LT shift to state 79
-- On LEQ shift to state 85
-- On ISIN shift to state 81
-- On INTERSECT shift to state 83
-- On GT shift to state 87
-- On GEQ shift to state 89
-- On EQ shift to state 91
-- On DIVIDEEQ shift to state 63
-- On DIVIDE shift to state 65
-- On ANDEQ shift to state 67
-- On AND shift to state 93
## Reductions:
-- On RBRACE COMMA
--   reduce production set_list -> expr

State 171:
## Known stack suffix:
## WHILE LPAREN expr RPAREN stmt
## LR(1) items:
stmt -> WHILE LPAREN expr RPAREN stmt . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF ELSE CONTINUE BREAK BOOL BLIT
--   reduce production stmt -> WHILE LPAREN expr RPAREN stmt

State 172:
## Known stack suffix:
## TEMPLATE
## LR(1) items:
fdecl -> TEMPLATE . LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
sdecl -> TEMPLATE . LARROW t_list RARROW STRUCT ID LBRACE struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LARROW shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## TEMPLATE LARROW
## LR(1) items:
fdecl -> TEMPLATE LARROW . t_list RARROW typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
sdecl -> TEMPLATE LARROW . t_list RARROW STRUCT ID LBRACE struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On ID shift to state 174
-- On t_list shift to state 175
## Reductions:

State 174:
## Known stack suffix:
## ID
## LR(1) items:
t_list -> ID . [ RARROW COMMA ]
## Transitions:
## Reductions:
-- On RARROW COMMA
--   reduce production t_list -> ID

State 175:
## Known stack suffix:
## TEMPLATE LARROW t_list
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list . RARROW typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
sdecl -> TEMPLATE LARROW t_list . RARROW STRUCT ID LBRACE struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
t_list -> t_list . COMMA ID [ RARROW COMMA ]
## Transitions:
-- On RARROW shift to state 176
-- On COMMA shift to state 203
## Reductions:

State 176:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list RARROW . typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
sdecl -> TEMPLATE LARROW t_list RARROW . STRUCT ID LBRACE struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRUCT shift to state 177
-- On STRING shift to state 5
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ shift to state 189
-- On group_typ shift to state 47
## Reductions:

State 177:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW STRUCT
## LR(1) items:
sdecl -> TEMPLATE LARROW t_list RARROW STRUCT . ID LBRACE struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On ID shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW STRUCT ID
## LR(1) items:
sdecl -> TEMPLATE LARROW t_list RARROW STRUCT ID . LBRACE struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LBRACE shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW STRUCT ID LBRACE
## LR(1) items:
sdecl -> TEMPLATE LARROW t_list RARROW STRUCT ID LBRACE . struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ shift to state 180
-- On struct_formal_list shift to state 183
-- On group_typ shift to state 47
## Reductions:

State 180:
## Known stack suffix:
## typ
## LR(1) items:
struct_formal_list -> typ . ID SEMI [ STRING SET RBRACE LIST INT ID FLOAT BOOL ]
## Transitions:
-- On ID shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## typ ID
## LR(1) items:
struct_formal_list -> typ ID . SEMI [ STRING SET RBRACE LIST INT ID FLOAT BOOL ]
## Transitions:
-- On SEMI shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## typ ID SEMI
## LR(1) items:
struct_formal_list -> typ ID SEMI . [ STRING SET RBRACE LIST INT ID FLOAT BOOL ]
## Transitions:
## Reductions:
-- On STRING SET RBRACE LIST INT ID FLOAT BOOL
--   reduce production struct_formal_list -> typ ID SEMI

State 183:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW STRUCT ID LBRACE struct_formal_list
## LR(1) items:
sdecl -> TEMPLATE LARROW t_list RARROW STRUCT ID LBRACE struct_formal_list . RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
struct_formal_list -> struct_formal_list . typ ID SEMI [ STRING SET RBRACE LIST INT ID FLOAT BOOL ]
## Transitions:
-- On STRING shift to state 5
-- On SET shift to state 7
-- On RBRACE shift to state 184
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ shift to state 186
-- On group_typ shift to state 47
## Reductions:

State 184:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW STRUCT ID LBRACE struct_formal_list RBRACE
## LR(1) items:
sdecl -> TEMPLATE LARROW t_list RARROW STRUCT ID LBRACE struct_formal_list RBRACE . SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On SEMI shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW STRUCT ID LBRACE struct_formal_list RBRACE SEMI
## LR(1) items:
sdecl -> TEMPLATE LARROW t_list RARROW STRUCT ID LBRACE struct_formal_list RBRACE SEMI . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT
--   reduce production sdecl -> TEMPLATE LARROW t_list RARROW STRUCT ID LBRACE struct_formal_list RBRACE SEMI

State 186:
## Known stack suffix:
## struct_formal_list typ
## LR(1) items:
struct_formal_list -> struct_formal_list typ . ID SEMI [ STRING SET RBRACE LIST INT ID FLOAT BOOL ]
## Transitions:
-- On ID shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## struct_formal_list typ ID
## LR(1) items:
struct_formal_list -> struct_formal_list typ ID . SEMI [ STRING SET RBRACE LIST INT ID FLOAT BOOL ]
## Transitions:
-- On SEMI shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## struct_formal_list typ ID SEMI
## LR(1) items:
struct_formal_list -> struct_formal_list typ ID SEMI . [ STRING SET RBRACE LIST INT ID FLOAT BOOL ]
## Transitions:
## Reductions:
-- On STRING SET RBRACE LIST INT ID FLOAT BOOL
--   reduce production struct_formal_list -> struct_formal_list typ ID SEMI

State 189:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW typ
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list RARROW typ . ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On ID shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW typ ID
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list RARROW typ ID . LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LPAREN shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW typ ID LPAREN
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list RARROW typ ID LPAREN . formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ shift to state 192
-- On group_typ shift to state 47
-- On formals_opt shift to state 194
-- On formal_list shift to state 199
## Reductions:
-- On RPAREN
--   reduce production formals_opt ->

State 192:
## Known stack suffix:
## typ
## LR(1) items:
formal_list -> typ . ID [ RPAREN COMMA ]
## Transitions:
-- On ID shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## typ ID
## LR(1) items:
formal_list -> typ ID . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production formal_list -> typ ID

State 194:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt . RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On RPAREN shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN . LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LBRACE shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN LBRACE
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN LBRACE . stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt_list shift to state 197
-- On stmt shift to state 169
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 197:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN LBRACE stmt_list
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN LBRACE stmt_list . RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
stmt_list -> stmt_list . stmt [ WHILE STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On RBRACE shift to state 198
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt shift to state 168
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 198:
## Known stack suffix:
## TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE
## LR(1) items:
fdecl -> TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT
--   reduce production fdecl -> TEMPLATE LARROW t_list RARROW typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE

State 199:
## Known stack suffix:
## formal_list
## LR(1) items:
formal_list -> formal_list . COMMA typ ID [ RPAREN COMMA ]
formals_opt -> formal_list . [ RPAREN ]
## Transitions:
-- On COMMA shift to state 200
## Reductions:
-- On RPAREN
--   reduce production formals_opt -> formal_list

State 200:
## Known stack suffix:
## formal_list COMMA
## LR(1) items:
formal_list -> formal_list COMMA . typ ID [ RPAREN COMMA ]
## Transitions:
-- On STRING shift to state 5
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ shift to state 201
-- On group_typ shift to state 47
## Reductions:

State 201:
## Known stack suffix:
## formal_list COMMA typ
## LR(1) items:
formal_list -> formal_list COMMA typ . ID [ RPAREN COMMA ]
## Transitions:
-- On ID shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## formal_list COMMA typ ID
## LR(1) items:
formal_list -> formal_list COMMA typ ID . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production formal_list -> formal_list COMMA typ ID

State 203:
## Known stack suffix:
## t_list COMMA
## LR(1) items:
t_list -> t_list COMMA . ID [ RARROW COMMA ]
## Transitions:
-- On ID shift to state 204
## Reductions:

State 204:
## Known stack suffix:
## t_list COMMA ID
## LR(1) items:
t_list -> t_list COMMA ID . [ RARROW COMMA ]
## Transitions:
## Reductions:
-- On RARROW COMMA
--   reduce production t_list -> t_list COMMA ID

State 205:
## Known stack suffix:
## STRUCT
## LR(1) items:
sdecl -> STRUCT . ID LBRACE struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On ID shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## STRUCT ID
## LR(1) items:
sdecl -> STRUCT ID . LBRACE struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LBRACE shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## STRUCT ID LBRACE
## LR(1) items:
sdecl -> STRUCT ID LBRACE . struct_formal_list RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ shift to state 180
-- On struct_formal_list shift to state 208
-- On group_typ shift to state 47
## Reductions:

State 208:
## Known stack suffix:
## STRUCT ID LBRACE struct_formal_list
## LR(1) items:
sdecl -> STRUCT ID LBRACE struct_formal_list . RBRACE SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
struct_formal_list -> struct_formal_list . typ ID SEMI [ STRING SET RBRACE LIST INT ID FLOAT BOOL ]
## Transitions:
-- On STRING shift to state 5
-- On SET shift to state 7
-- On RBRACE shift to state 209
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ shift to state 186
-- On group_typ shift to state 47
## Reductions:

State 209:
## Known stack suffix:
## STRUCT ID LBRACE struct_formal_list RBRACE
## LR(1) items:
sdecl -> STRUCT ID LBRACE struct_formal_list RBRACE . SEMI [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On SEMI shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## STRUCT ID LBRACE struct_formal_list RBRACE SEMI
## LR(1) items:
sdecl -> STRUCT ID LBRACE struct_formal_list RBRACE SEMI . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT
--   reduce production sdecl -> STRUCT ID LBRACE struct_formal_list RBRACE SEMI

State 211:
## Known stack suffix:
## decls EOF
## LR(1) items:
program -> decls EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production program -> decls EOF

State 212:
## Known stack suffix:
## typ
## LR(1) items:
expr -> typ . ID ASSIGN expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> typ . ID [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
fdecl -> typ . ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On ID shift to state 213
## Reductions:

State 213:
## Known stack suffix:
## typ ID
## LR(1) items:
expr -> typ ID . ASSIGN expr [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
expr -> typ ID . [ UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND ]
fdecl -> typ ID . LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LPAREN shift to state 214
-- On ASSIGN shift to state 42
## Reductions:
-- On UNION TIMESEQ TIMES SEMI PLUSEQ PLUS OREQ OR NEQ MODEQ MOD MINUSEQ MINUS LT LEQ ISIN INTERSECT GT GEQ EQ DIVIDEEQ DIVIDE ANDEQ AND
--   reduce production expr -> typ ID

State 214:
## Known stack suffix:
## typ ID LPAREN
## LR(1) items:
fdecl -> typ ID LPAREN . formals_opt RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On STRING shift to state 5
-- On SET shift to state 7
-- On LIST shift to state 9
-- On INT shift to state 33
-- On ID shift to state 102
-- On FLOAT shift to state 36
-- On BOOL shift to state 38
-- On typ shift to state 192
-- On group_typ shift to state 47
-- On formals_opt shift to state 215
-- On formal_list shift to state 199
## Reductions:
-- On RPAREN
--   reduce production formals_opt ->

State 215:
## Known stack suffix:
## typ ID LPAREN formals_opt
## LR(1) items:
fdecl -> typ ID LPAREN formals_opt . RPAREN LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On RPAREN shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## typ ID LPAREN formals_opt RPAREN
## LR(1) items:
fdecl -> typ ID LPAREN formals_opt RPAREN . LBRACE stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On LBRACE shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## typ ID LPAREN formals_opt RPAREN LBRACE
## LR(1) items:
fdecl -> typ ID LPAREN formals_opt RPAREN LBRACE . stmt_list RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt_list shift to state 218
-- On stmt shift to state 169
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 218:
## Known stack suffix:
## typ ID LPAREN formals_opt RPAREN LBRACE stmt_list
## LR(1) items:
fdecl -> typ ID LPAREN formals_opt RPAREN LBRACE stmt_list . RBRACE [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
stmt_list -> stmt_list . stmt [ WHILE STRING SLIT SET RETURN RBRACE NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT CONTINUE BREAK BOOL BLIT ]
## Transitions:
-- On WHILE shift to state 3
-- On STRING shift to state 5
-- On SLIT shift to state 6
-- On SET shift to state 7
-- On RETURN shift to state 134
-- On RBRACE shift to state 219
-- On NOT shift to state 27
-- On MINUS shift to state 28
-- On LPAREN shift to state 29
-- On LITERAL shift to state 30
-- On LIST shift to state 9
-- On LBRACK shift to state 31
-- On LBRACE shift to state 138
-- On INT shift to state 33
-- On IF shift to state 139
-- On ID shift to state 34
-- On FOR shift to state 143
-- On FLOAT shift to state 36
-- On FLIT shift to state 37
-- On CONTINUE shift to state 151
-- On BREAK shift to state 153
-- On BOOL shift to state 38
-- On BLIT shift to state 39
-- On typ shift to state 40
-- On templated_expr shift to state 43
-- On stmt shift to state 168
-- On set_expr shift to state 44
-- On paren_expr shift to state 45
-- On list_expr shift to state 46
-- On group_typ shift to state 47
-- On expr shift to state 156
## Reductions:

State 219:
## Known stack suffix:
## typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE
## LR(1) items:
fdecl -> typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT
--   reduce production fdecl -> typ ID LPAREN formals_opt RPAREN LBRACE stmt_list RBRACE

State 220:
## Known stack suffix:
## decls stmt
## LR(1) items:
decls -> decls stmt . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT
--   reduce production decls -> decls stmt

State 221:
## Known stack suffix:
## decls sdecl
## LR(1) items:
decls -> decls sdecl . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT
--   reduce production decls -> decls sdecl

State 222:
## Known stack suffix:
## decls fdecl
## LR(1) items:
decls -> decls fdecl . [ WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT ]
## Transitions:
## Reductions:
-- On WHILE TEMPLATE STRUCT STRING SLIT SET RETURN NOT MINUS LPAREN LITERAL LIST LBRACK LBRACE INT IF ID FOR FLOAT FLIT EOF CONTINUE BREAK BOOL BLIT
--   reduce production decls -> decls fdecl

